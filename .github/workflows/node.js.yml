name: Full Stack CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        os: [ubuntu-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Backend Steps
    - name: Install backend dependencies
      working-directory: backend
      run: npm ci --audit=false

    - name: Run backend linting
      working-directory: backend
      run: |
        npm run lint --if-present || (echo "Linting failed" && exit 1)

    - name: Build backend
      working-directory: backend
      run: npm run build --if-present

    - name: Run backend tests
      working-directory: backend
      run: |
        npm test -- --ci --coverage
      env:
        NODE_ENV: test
        DB_URL: ${{ secrets.TEST_DB_URL }}

    # Frontend Steps  
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci

    - name: Run frontend linting
      working-directory: frontend
      run: |
        npm run lint --if-present || (echo "Linting failed" && exit 1)

    - name: Build frontend
      working-directory: frontend
      run: npm run build

    - name: Run frontend tests
      working-directory: frontend
      run: |
        npm test -- --watchAll=false --ci --coverage
      env:
        CI: true

    # Artifacts and Reporting
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          backend/coverage
          frontend/coverage
          **/test-results.xml

    - name: Notify Slack on failure
      if: failure()
      uses: slackapi/slack-github-action@v1
      with:
        slack-message: 'ðŸš¨ ${{ github.workflow }} failed for ${{ github.ref }}'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
